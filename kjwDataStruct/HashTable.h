#pragma once
#include <iostream>

using namespace std;


#pragma region 해시 테이블

// (Key, Value)로 데이터를 저장하는 자료구조 중 하나로 빠르게 데이터를 검색할 수 있는 자료구조.
// 해시 테이블의 평균 시간 복잡도는 O(1)입니다.

// 해시 충돌을 해결하는 방법
// <체이닝 기법>
// 각 해시 버킷을 연결 리스트로 구성하는 방식.
// 해시 충돌 발생시 동일한 해시 값에 해당하는 데이터들을 연결 리스트로 연결하여 저장.

// <개방 주소법>
// 충돌 발생시 빈 버킷에 데이터를 저장하는 방식.
// 빈 버킷을 어떻게 결정할 지에 따라 구현 방식이 달라짐.

// 선형 탐사 : 충돌 발생시 앞에서부터 차례대로 빈 버킷을 찾아 값을 저장하는 방식.

// 2차 탐사 : 충돌 발생시 2의 제곱, 2의 세제곱만큼 떨어진 빈 버킷을 찾아 값을 저장.

// 이중 해싱 : 해시 값을 한번 더 해시 함수에 넣어 다른 함수를 도출하는 방식.



#pragma endregion
